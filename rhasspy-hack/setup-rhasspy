#!/usr/bin/bash
source $(t3x -T)

#slow_lol "Setup d.voice/rhasspy in Virtual Environment"
#slow_lol "https://rhasspy.readthedocs.io/en/latest/installation/#virtual-environment"
sleep 1

apt_update

#apt_install_list "python3 python3-dev python3-setuptools python3-pip \
#  python3-venv git build-essential libatlas-base-dev swig \
#  portaudio19-dev supervisor mosquitto sox alsa-utils \
#  libgfortran5 libopenblas-dev espeak flite perl curl patchelf \
#  ca-certificates"

apt_install_list "python3 python3-dev python3-setuptools python3-pip python3-venv \
       git build-essential libatlas-base-dev swig portaudio19-dev \
       supervisor mosquitto sox alsa-utils libgfortran5 libopenblas-dev \
       espeak flite gfortran python3-lxml libxml2-dev libxslt1-dev libffi-dev \
       perl curl patchelf ca-certificates"

if [ ! -d rhasspy ]; then
  git clone --recursive https://github.com/rhasspy/rhasspy rhasspy
  if [ $? -ne 0 ]; then
    echo "git clone failed ... debug that!"
    exit 1
  fi
  # https://github.com/rhasspy/rhasspy/issues/317#issue-1577112528
  wget https://github.com/rhasspy/rhasspy/files/10692790/jammy.patch
  patch -p0 < jammy.patch
fi

cd rhasspy
if ! run "./configure --enable-in-place"; then
  echo "./configure failed"; exit 1
fi

if [ -f .venv/bin/python ]; then 
  .venv/bin/python -m pip install --upgrade pip 
fi

if ! run "make"; then
  echo "Failed: make"; exit 1
fi

if [ -f .venv/bin/python ]; then 
  .venv/bin/python -m pip install --upgrade pip 
fi

if ! run "make install"; then
  echo "Failed: make install"; exit 1
fi

slow_lol "rhasspy install complete"

echo "Rhasspy installed in a virtual invironment $PWD/.venv"
echo "copy rhasspy.sh into the $PATH and rename to rhasspy"
